generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

type HighlightComment {
  text      String
  timestamp DateTime @db.Date
  userId    String
}

type HighlightScaledPosition {
  height     Float
  width      Float
  x1         Float
  y1         Float
  x2         Float
  y2         Float
  pageNumber Int?
}

type ParsedPaperText {
  outline  String[]
  sections ParsedPaperTextSections[]
  title    String
}

type ParsedPaperTextSections {
  facts ParsedPaperTextSectionsFacts[]
  name  String
  page  Int
  text  String
}

type ParsedPaperTextSectionsFacts {
  expectedInfo String
  fact         String
  nextSource   String
  relevance    String
}

model CurriculumNode {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  comments    HighlightComment[]
  prompt      String?
  response    String?
  timestamp   DateTime           @db.Date
  parentId    String?            @db.ObjectId
  parent      CurriculumNode?    @relation("SubNodes", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children    CurriculumNode[]   @relation("SubNodes")
  highlightId String?            @unique @db.ObjectId
  highlight   Highlight?         @relation(fields: [highlightId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum HighlightType {
  ASK
  COMMENT
}

model AnnotatedPdf {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  highlights Highlight[]
  source     String
  userId     String
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  clerk_id   String
  email      String
  first_name String
  followers  String[]
  follows    String[]
  handle     String
  last_name  String
}

type ParsedPaperFacts {
  expectedInfo String
  fact         String
  nextSource   String
  relevance    String
}

type ParsedPaperSections {
  metadata ParsedPaperSectionsMetadata
  text     String
}

type ParsedPaperSectionsMetadata {
  Header_1 String?
  Header_2 String?
  Header_3 String?
  Header_4 String?
  Header_5 String?
}

model ParsedPaper {
  id               String                @id @default(auto()) @map("_id") @db.ObjectId
  abstract         String
  facts            ParsedPaperFacts[]
  primary_category String
  published        DateTime              @db.Date
  sections         ParsedPaperSections[]
  source           String
  title            String
  updated          DateTime              @db.Date
}

type HighlightPosition {
  boundingRect      HighlightScaledPosition
  pageNumber        Int
  rects             HighlightScaledPosition[]
  usePdfCoordinates Boolean?
}

type HighlightV2HighlightAreas {
  height    Float
  left      Float
  pageIndex Int
  top       Float
  width     Float
}

model Highlight {
  id             String                      @id @default(auto()) @map("_id") @db.ObjectId
  content        String
  highlightAreas HighlightV2HighlightAreas[]
  id_            Int                         @map("id")
  quote          String
  type           HighlightType               @default(COMMENT)
  node           CurriculumNode?
  annotatedPdf   AnnotatedPdf                @relation(fields: [annotatedPdfId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  annotatedPdfId String                      @db.ObjectId
}
